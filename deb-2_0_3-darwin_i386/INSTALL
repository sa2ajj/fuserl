fuserldrv uses framewerk, which is basically a way to template automake.
however you don't need to install framewerk to build from a dist tarball.
it should behave just like a normal gnu automake/autoconf based project.

that means, run 

% ./configure --help

to get tons of options, or just cross your fingers and type

% ./configure && make && make install

Some notes:

* The default prefix is "/usr".  If you don't like that, make sure to use
  the --prefix configure option.

* You need pkg-config.
        * Ubuntu/Debian: aptitude install pkg-config
        * OS/X (fink): apt-get install pkgconfig
        * freebsd: http://www.freshports.org/devel/pkg-config
        * others: please let me know so i can update here

* You need libfuse with development headers and at least version 2.6.0.
        * Ubuntu/Debian: aptitude install libfuse-dev
        * OS/X (fink): apt-get install fuse
        * OS/X (not fink): install the macfuse pkg
        * freebsd: http://fuse4bsd.creo.hu/
        * others: please let me know so i can update here

* You need erl_driver.h.
        * Ubuntu/Debian: aptitude install erlang-dev
        * OS/X (fink): apt-get install erlang-otp
        * freebsd: http://www.freshports.org/lang/erlang
        * others: please let me know so i can update here

Finally, you need the associated Erlang code to do something interesting.  
This is just the C driver.  The Erlang code is called 'fuserl' and can 
hopefully be found near wherever you got fuserldrv.

===================
Tested Environments
===================

        * Ubuntu amd64 feisty
        * Ubuntu i386 gusty
        * OS/X 10.4 Intel with MacFUSE Core 10.4-1.2.0
        * FreeBSD 7.0RC1 (i386)
          * pipe mode does work.
          * linked-in driver does not work.
          * i think this is a libtool problem.  it's definitely not honoring the -avoid_version flag.  any freebsd gurus who figure this out let me know.
